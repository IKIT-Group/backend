generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Pet {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type        String
  name        String
  description String   @default("")
  image       String   @default("pet-fallback.png")
  gender      Boolean
  sterilized  Boolean
  hasPassport Boolean
  health      String
  dateOfBirth DateTime @db.Date
  owners      Owner[]
}

model Owner {
  id          String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String
  age         Int
  phone       String
  email       String
  activity    String
  petId       String  @db.Uuid
  pet         Pet     @relation(fields: [petId], references: [id])
  livesAlone  String
  hadPets     String
  hasPets     String
  selfWalking Boolean
  canPay      Boolean
}

model Product {
  id         String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type       String
  name       String
  image      String  @default("product-fallback.png")
  price      Float
  oldPrice   Float?
  orderItems OrderItem[]
}

model Order {
  id       String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  phone    String
  email    String
  items    OrderItem[]
}

model OrderItem {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  orderId   String   @db.Uuid
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productId String   @db.Uuid
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  quantity  Int
}
